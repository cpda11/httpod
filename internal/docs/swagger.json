{
    "swagger": "2.0",
    "info": {
        "description": "A simple HTTP Request \u0026 HTTPResponse Service, shamelessly stolen from httpbin.org.",
        "title": "httPod",
        "contact": {},
        "version": "0.0.1"
    },
    "paths": {
        "/cookies": {
            "get": {
                "description": "Requests using GET should only retrieve data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cookies"
                ],
                "summary": "Get all cookies of the request.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/cookies.GetCookies"
                            }
                        }
                    }
                }
            }
        },
        "/cookies/{cookieName}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cookies"
                ],
                "summary": "Create a new cookie.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the new cookie",
                        "name": "cookieName",
                        "in": "path"
                    },
                    {
                        "description": "The cookie",
                        "name": "cookie",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cookies.SetCookie"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cookies.GetCookies"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a specific cookie.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cookies"
                ],
                "summary": "Delete a cookie.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the cookie to delete",
                        "name": "cookieName",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cookies.GetCookies"
                        }
                    }
                }
            }
        },
        "/delete": {
            "delete": {
                "description": "The DELETE method deletes the specified resource.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HTTP Methods"
                ],
                "summary": "Do a DELETE request.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Response"
                        }
                    }
                }
            }
        },
        "/get": {
            "get": {
                "description": "Requests using GET should only retrieve data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HTTP Methods"
                ],
                "summary": "Do a GET request.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Response"
                        }
                    }
                }
            }
        },
        "/patch": {
            "patch": {
                "description": "The PATCH method is used to apply partial modifications to a resource.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HTTP Methods"
                ],
                "summary": "Do a PATCH request.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Response"
                        }
                    }
                }
            }
        },
        "/post": {
            "post": {
                "description": "The POST method is used to submit an entity to the specified resource, often causing a change in state or side effects on the server.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HTTP Methods"
                ],
                "summary": "Do a POST request.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Response"
                        }
                    }
                }
            }
        },
        "/put": {
            "put": {
                "description": "The PUT method replaces all current representations of the target resource with the request payload.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HTTP Methods"
                ],
                "summary": "Do PUT request.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Response"
                        }
                    }
                }
            }
        },
        "/status/{code}": {
            "get": {
                "description": "Requests using GET should only retrieve data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Status codes"
                ],
                "summary": "Do a GET request.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "return status code",
                        "name": "code",
                        "in": "path"
                    }
                ],
                "responses": {
                    "100": {
                        "description": "Informational responses",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "300": {
                        "description": "Redirection",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Client Errors",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "418": {
                        "description": "I'm a teapot",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server Errors",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "The PUT method replaces all current representations of the target resource with the request payload.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Status codes"
                ],
                "summary": "Do PUT request.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "return status code",
                        "name": "code",
                        "in": "path"
                    }
                ],
                "responses": {
                    "100": {
                        "description": "Informational responses",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "300": {
                        "description": "Redirection",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Client Errors",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "418": {
                        "description": "I'm a teapot",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server Errors",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "The POST method is used to submit an entity to the specified resource, often causing a change in state or side effects on the server.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Status codes"
                ],
                "summary": "Do a POST request.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "return status code",
                        "name": "code",
                        "in": "path"
                    }
                ],
                "responses": {
                    "100": {
                        "description": "Informational responses",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "300": {
                        "description": "Redirection",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Client Errors",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "418": {
                        "description": "I'm a teapot",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server Errors",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "The DELETE method deletes the specified resource.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Status codes"
                ],
                "summary": "Do a DELETE request.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "return status code",
                        "name": "code",
                        "in": "path"
                    }
                ],
                "responses": {
                    "100": {
                        "description": "Informational responses",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "300": {
                        "description": "Redirection",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Client Errors",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "418": {
                        "description": "I'm a teapot",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server Errors",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "The PATCH method is used to apply partial modifications to a resource.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Status codes"
                ],
                "summary": "Do a PATCH request.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "return status code",
                        "name": "code",
                        "in": "path"
                    }
                ],
                "responses": {
                    "100": {
                        "description": "Informational responses",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "300": {
                        "description": "Redirection",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Client Errors",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "418": {
                        "description": "I'm a teapot",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server Errors",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "cookies.GetCookies": {
            "type": "object",
            "properties": {
                "domain": {
                    "type": "string"
                },
                "expires": {
                    "type": "string"
                },
                "httpOnly": {
                    "type": "boolean"
                },
                "maxAge": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "rawExpires": {
                    "type": "string"
                },
                "sameSite": {
                    "type": "string"
                },
                "secure": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "cookies.SetCookie": {
            "type": "object",
            "properties": {
                "expiresSeconds": {
                    "type": "integer",
                    "example": 3600
                },
                "httpOnly": {
                    "type": "boolean",
                    "example": true
                },
                "maxAge": {
                    "type": "integer",
                    "example": 0
                },
                "path": {
                    "type": "string",
                    "example": "/"
                },
                "sameSite": {
                    "type": "string",
                    "example": "Strict"
                },
                "secure": {
                    "type": "boolean",
                    "example": true
                },
                "value": {
                    "type": "string",
                    "example": "Test"
                }
            }
        },
        "http.Response": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "origin": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "description": "Testing different HTTP methods",
            "name": "HTTP Methods"
        },
        {
            "description": "Generates responses with given status code",
            "name": "Status codes"
        },
        {
            "description": "Creates, reads and deletes Cookies",
            "name": "Cookies"
        }
    ]
}